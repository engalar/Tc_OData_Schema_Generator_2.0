// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package schemagenerator.actions;

import java.util.List;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.webui.FeedbackHelper;
import schemagenerator.proxies.ActionParams;
import schemagenerator.proxies.ComplexTypeAttribute;
import schemagenerator.proxies.ContractNameSpaces;
import schemagenerator.proxies.ODataSchema;
import schemagenerator.proxies.OdataActions;
import schemagenerator.proxies.OdataComplexType;
import schemagenerator.proxies.OdataObject;
import schemagenerator.proxies.ReturnType;
import schemagenerator.proxies.SelectionTreeNode;
import schemagenerator.proxies.SelectionTreeNodeHelper;
import schemagenerator.proxies.View;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class TreeSelectAction extends CustomJavaAction<java.lang.Void>
{
	private IMendixObject __selectionHelper;
	private schemagenerator.proxies.SelectionTreeNodeHelper selectionHelper;

	public TreeSelectAction(IContext context, IMendixObject selectionHelper)
	{
		super(context);
		this.__selectionHelper = selectionHelper;
	}

	@java.lang.Override
	public java.lang.Void executeAction() throws Exception
	{
		this.selectionHelper = this.__selectionHelper == null ? null : schemagenerator.proxies.SelectionTreeNodeHelper.initialize(getContext(), __selectionHelper);

		// BEGIN USER CODE
		IMendixObject nodeMxObj = Core.retrieveByPath(getContext(), __selectionHelper, SelectionTreeNodeHelper.MemberNames.SelectionTreeNodeHelper_SelectionTreeNode.toString()).get(0);
		SelectionTreeNode node = SelectionTreeNode.initialize(getContext(), nodeMxObj);
		if (node.getMendixType().equals(ODataSchema.entityName) || node.getMendixType().equals(ContractNameSpaces.entityName)){
			return null;
		}
		IMendixObject viewMxObj = Core.retrieveByPath(getContext(), __selectionHelper, SelectionTreeNodeHelper.MemberNames.SelectionTreeNodeHelper_View.toString()).get(0);
		View view = View.initialize(getContext(), viewMxObj);
		String dataType = node.getOdataFullyQuallifiedName();
		switch (view.getViewForObjectType(getContext())) {
			case OdataComplexType.entityName :
				IMendixObject complextypeMxObj = Core.retrieveByPath(getContext(), viewMxObj, OdataComplexType.MemberNames.OdataComplexType_View.toString()).get(0);
				OdataComplexType complexType = OdataComplexType.initialize(getContext(), complextypeMxObj);
				complexType.setBaseComplexType(getContext(), dataType);
				break;
			case ComplexTypeAttribute.entityName :
				IMendixObject complextypeAttributeMxObj = Core.retrieveByPath(getContext(), viewMxObj, ComplexTypeAttribute.MemberNames.ComplexTypeAttribute_View.toString()).get(0);
				ComplexTypeAttribute complexTypeAttribute = ComplexTypeAttribute.initialize(getContext(), complextypeAttributeMxObj);
				complexTypeAttribute.setAttributeDataType(getContext(), dataType);
				break;
			case OdataActions.entityName :
				IMendixObject odataActionMxObj = Core.retrieveByPath(getContext(), viewMxObj, OdataActions.MemberNames.OdataActions_View.toString()).get(0);
				OdataActions odataAction = OdataActions.initialize(getContext(), odataActionMxObj);
				if (view.getIsforBound(getContext())) {
					OdataObject boundEntity = OdataObject.load(getContext(), Core.createMendixIdentifier(node.getMendixGUID()));
					odataAction.setOdataActions_OdataObject(getContext(), boundEntity);
					break;
				}
				else {
					ReturnType returnType = ReturnType.initialize(getContext(), Core.retrieveByPath(getContext(), odataActionMxObj, ReturnType.MemberNames.ReturnType_OdataActions.toString()).get(0));
					returnType.setBaseType(getContext(), node.getOdataFullyQuallifiedName(getContext()));
					returnType.commit();
					break;
				}
			case ActionParams.entityName :
				IMendixObject actionParamsMxObj = Core.retrieveByPath(getContext(), viewMxObj, ActionParams.MemberNames.ActionParams_View.toString()).get(0);
				ActionParams actionParams = ActionParams.initialize(getContext(), actionParamsMxObj);
				actionParams.setParameterDataType(getContext(), dataType);
				actionParams.setParameterDataTypeGUID(getContext(), node.getMendixGUID());
				break;
			default :
				break;
		}

		//Delete The Entire tree
		List<IMendixObject> entireTree = Core.retrieveByPath(getContext(), viewMxObj, SelectionTreeNode.MemberNames.SelectionTreeNode_View.toString());
		Core.deleteAsync(getContext(), entireTree, false);
		FeedbackHelper.addCloseCallerFeedback(getContext());
		return null;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "TreeSelectAction";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
