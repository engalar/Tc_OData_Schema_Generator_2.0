// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package schemagenerator.actions;

import java.util.ArrayList;
import java.util.List;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import schemagenerator.proxies.OData_Properties;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class ValidateReferenceType extends CustomJavaAction<java.lang.Void>
{
	private IMendixObject __OdataSchema;
	private schemagenerator.proxies.ODataSchema OdataSchema;

	public ValidateReferenceType(IContext context, IMendixObject OdataSchema)
	{
		super(context);
		this.__OdataSchema = OdataSchema;
	}

	@java.lang.Override
	public java.lang.Void executeAction() throws Exception
	{
		this.OdataSchema = this.__OdataSchema == null ? null : schemagenerator.proxies.ODataSchema.initialize(getContext(), __OdataSchema);

		// BEGIN USER CODE
		try {
			List<IMendixObject> contractNSList = Core.retrieveByPath(getContext(), __OdataSchema, "SchemaGenerator.ContractNameSpaces_ODataSchema");
			List<IMendixObject> odataObjList = new ArrayList<IMendixObject>();
			
			for(IMendixObject contractNS : contractNSList)
			{
				List<IMendixObject> objList = Core.retrieveByPath(getContext(), contractNS, "SchemaGenerator.OdataObject_ContractNameSpaces");
				odataObjList.addAll(objList);
			}
			
			for(IMendixObject OdataObj : odataObjList)
			{
				List<IMendixObject> propList = Core.retrieveByPath(getContext(), OdataObj, "SchemaGenerator.Properties_OdataObject");
				for(IMendixObject prop : propList)
				{
					if(prop.getMember(getContext(), "ODataTypeValue").getValue(getContext()).equals(OData_Properties.Reference.getCaption()) 
							|| prop.getMember(getContext(), "ODataTypeValue").getValue(getContext()).equals(OData_Properties.Relation.getCaption()))
					{
						String referenceValue = prop.getMember(getContext(), "referenceType").getValue(getContext()).toString();
						if(referenceValue == null || referenceValue.isEmpty())
							throw new Exception("Please select valid reference object for property " + prop.getMember(getContext(), "TcName"));
					}
				}
			}
		} catch (Exception e) {
			throw e;
		}
		return null;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "ValidateReferenceType";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
