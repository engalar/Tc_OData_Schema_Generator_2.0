// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package schemagenerator.actions;

import schemagenerator.proxies.View;
import java.util.List;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.webui.FeedbackHelper;
import schemagenerator.proxies.ActionParams;
import schemagenerator.proxies.SelectionTreeNode;
import schemagenerator.proxies.SelectionTreeNodeHelper;
import schemagenerator.proxies.TemplateParameters;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class InputTemplateTreeSelectAction extends CustomJavaAction<java.lang.Void>
{
	private IMendixObject __selectionTreeNodeHelper;
	private schemagenerator.proxies.SelectionTreeNodeHelper selectionTreeNodeHelper;

	public InputTemplateTreeSelectAction(IContext context, IMendixObject selectionTreeNodeHelper)
	{
		super(context);
		this.__selectionTreeNodeHelper = selectionTreeNodeHelper;
	}

	@java.lang.Override
	public java.lang.Void executeAction() throws Exception
	{
		this.selectionTreeNodeHelper = this.__selectionTreeNodeHelper == null ? null : schemagenerator.proxies.SelectionTreeNodeHelper.initialize(getContext(), __selectionTreeNodeHelper);

		// BEGIN USER CODE
		IMendixObject nodeMxObj = Core.retrieveByPath(getContext(), __selectionTreeNodeHelper, SelectionTreeNodeHelper.MemberNames.SelectionTreeNodeHelper_SelectionTreeNode.toString()).get(0);
		SelectionTreeNode node = SelectionTreeNode.initialize(getContext(), nodeMxObj);
		IMendixObject viewMxObj = Core.retrieveByPath(getContext(), __selectionTreeNodeHelper, SelectionTreeNodeHelper.MemberNames.SelectionTreeNodeHelper_View.toString()).get(0);
		View view = View.initialize(getContext(), viewMxObj);
		Long uuid = view.getViewForObjectUUID();
		SelectionTreeNode orignalNode = SelectionTreeNode.load(getContext(), Core.createMendixIdentifier(uuid));
		IMendixObject templateParams = Core.retrieveByPath(getContext(), viewMxObj, TemplateParameters.MemberNames.TemplateParameters_View.toString()).get(0);
		String dataType = node.getOdataFullyQuallifiedName();
		templateParams.setValue(getContext(), TemplateParameters.MemberNames.Expression.toString(), dataType);
		String[] parts = orignalNode.getName().split("[:]");
		if (parts.length >= 2) {
			orignalNode.setName(getContext(), parts[0] + ":" + dataType);
		}
		else {
			orignalNode.setName(getContext(), parts[0] + " " + dataType);
		}
		orignalNode.commit();
		List<IMendixObject> entireTree = Core.retrieveByPath(getContext(), viewMxObj, SelectionTreeNode.MemberNames.SelectionTreeNode_View.toString());
		Core.deleteAsync(getContext(), entireTree, false);
		FeedbackHelper.addCloseCallerFeedback(getContext());
		return null;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "InputTemplateTreeSelectAction";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
