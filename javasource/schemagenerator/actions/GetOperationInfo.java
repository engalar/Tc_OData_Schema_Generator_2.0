// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package schemagenerator.actions;

import java.io.File;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import org.apache.commons.io.FileUtils;
import org.apache.commons.io.IOUtils;
import schemagenerator.proxies.OperationInfo;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.thirdparty.org.json.JSONArray;
import com.mendix.thirdparty.org.json.JSONObject;

public class GetOperationInfo extends CustomJavaAction<java.util.List<IMendixObject>>
{
	public GetOperationInfo(IContext context)
	{
		super(context);
	}

	@java.lang.Override
	public java.util.List<IMendixObject> executeAction() throws Exception
	{
		// BEGIN USER CODE
		File serviceListFile = new File(Core.getConfiguration().getResourcesPath(), "ServiceList.json");
		InputStream fileStream = FileUtils.openInputStream(serviceListFile);
		String fileJsonString = IOUtils.toString(fileStream);
		fileStream.close();
		JSONObject serviceListFileJSON = new JSONObject(fileJsonString);
		List<IMendixObject> operationInfoList = new ArrayList<>();
		Iterator<String> keys = serviceListFileJSON.keys();
		
		while (keys.hasNext()) 
        {
            String key = keys.next();
            JSONArray valueJsonArray = serviceListFileJSON.getJSONArray(key);

            for(int cnt=0; cnt < valueJsonArray.length(); ++cnt)
            {
				String value = valueJsonArray.getString(cnt);
				String[] splitStr =  key.split("[-]");
				if(splitStr.length ==4 || splitStr.length ==5 )
				{
					String path = "";
					if(splitStr.length==4)
					{
						 path = "ActionMapping"+"/"+splitStr[0]+"/"+splitStr[1]+"-"+splitStr[2]+"/"+splitStr[3]+"/"+value+".json";
					}
					if(splitStr.length==5)
					{
						 path = "ActionMapping"+"/"+splitStr[1]+"/"+splitStr[2]+"-"+splitStr[3]+"/"+splitStr[4]+"/"+value+".json";
					}
					String name = key+"/"+value;
					OperationInfo operationNames= new OperationInfo(getContext());
					operationNames.setPath(getContext(), path);
					operationNames.setName(getContext(), name);
					operationInfoList.add(operationNames.getMendixObject());
				}
            }  
        }
        //Collections.sort(operationInfoList);
		return operationInfoList;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "GetOperationInfo";
	}

	// BEGIN EXTRA CODE
	
	// END EXTRA CODE
}
