// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package schemagenerator.actions;

import java.util.List;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IFeedback;
import com.mendix.webui.CustomJavaAction;
import com.mendix.webui.FeedbackHelper;
import schemagenerator.proxies.ContractNameSpaces;
import schemagenerator.proxies.OdataActions;
import schemagenerator.proxies.ReturnType;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.systemwideinterfaces.core.UserException;
import com.mendix.systemwideinterfaces.core.UserException.ExceptionCategory;

public class CreateBlankODataAction__ extends CustomJavaAction<IMendixObject>
{
	private IMendixObject __schema;
	private schemagenerator.proxies.ODataSchema schema;
	private IMendixObject __contractNameSpaceDropDown;
	private schemagenerator.proxies.ContractNameSpaceDropDown contractNameSpaceDropDown;

	public CreateBlankODataAction__(IContext context, IMendixObject schema, IMendixObject contractNameSpaceDropDown)
	{
		super(context);
		this.__schema = schema;
		this.__contractNameSpaceDropDown = contractNameSpaceDropDown;
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		this.schema = this.__schema == null ? null : schemagenerator.proxies.ODataSchema.initialize(getContext(), __schema);

		this.contractNameSpaceDropDown = this.__contractNameSpaceDropDown == null ? null : schemagenerator.proxies.ContractNameSpaceDropDown.initialize(getContext(), __contractNameSpaceDropDown);

		// BEGIN USER CODE
		List<IMendixObject> contractNSList = Core.retrieveByPath(getContext(), __schema, ContractNameSpaces.MemberNames.ContractNameSpaces_ODataSchema.toString());
		IMendixObject selectedContractNS = null;
		for(IMendixObject contractNS : contractNSList) {
			if(contractNS.getMember(getContext(), ContractNameSpaces.MemberNames.ContractNameSpace.toString()).getValue(getContext()).toString().equals(contractNameSpaceDropDown.getContractNameSpace(getContext()))) {
				selectedContractNS = contractNS;
				break;
			}
		}
		if(selectedContractNS == null)
			throw new UserException(ExceptionCategory.Custom, "The NameSpace Was not found");

		OdataActions odataAction = new OdataActions(getContext());
		ReturnType returnType = new ReturnType(getContext());
		returnType.setBaseType("Void");
		returnType.setOriginalBaseType("Void");
		returnType.setName("Return Type");
		returnType.setReturnType_OdataActions(getContext(), odataAction);
		odataAction.setOdataActions_ContractNameSpaces(getContext(), ContractNameSpaces.initialize(getContext(), selectedContractNS));
		/*FeedbackHelper.addOpenFormFeedback(
			getContext(),
			"SchemaGenerator/AddActionPage_ForMockups",
			IFeedback.FormTarget.CONTENT,
			odataAction.getMendixObject().getId(),
			null
		);*/
		return odataAction.getMendixObject();
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "CreateBlankODataAction__";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
