// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package schemagenerator.actions;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.webui.FeedbackHelper;
import java.io.File;
import java.io.InputStream;
import org.apache.commons.io.FileUtils;
import org.apache.commons.io.IOUtils;
import schemagenerator.proxies.OdataActions;
import schemagenerator.proxies.OperationInfo;
import schemagenerator.proxies.SelectionTreeNode;
import schemagenerator.proxies.View;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.thirdparty.org.json.JSONObject;

public class ShowActionMappingEditPageAction extends CustomJavaAction<java.lang.Void>
{
	private IMendixObject __odataAction;
	private schemagenerator.proxies.OdataActions odataAction;
	private IMendixObject __opMappingFile;
	private schemagenerator.proxies.OperationMappingFile opMappingFile;

	public ShowActionMappingEditPageAction(IContext context, IMendixObject odataAction, IMendixObject opMappingFile)
	{
		super(context);
		this.__odataAction = odataAction;
		this.__opMappingFile = opMappingFile;
	}

	@java.lang.Override
	public java.lang.Void executeAction() throws Exception
	{
		this.odataAction = this.__odataAction == null ? null : schemagenerator.proxies.OdataActions.initialize(getContext(), __odataAction);

		this.opMappingFile = this.__opMappingFile == null ? null : schemagenerator.proxies.OperationMappingFile.initialize(getContext(), __opMappingFile);

		// BEGIN USER CODE
		String fileJsonString="";
		String operationName = opMappingFile.getOperationName();
		String[] splitStr =  operationName.split("[-]");
		
		if(splitStr.length ==4 || splitStr.length ==5 )
		{
			String path = "";
			if(splitStr.length==4)
			{
				path = "ActionMapping"+"/"+splitStr[0]+"/"+splitStr[1]+"-"+splitStr[2]+"/"+splitStr[3]+".json";
			}
			if(splitStr.length==5)
			{
				path = "ActionMapping"+"/"+splitStr[1]+"/"+splitStr[2]+"-"+splitStr[3]+"/"+splitStr[4]+".json";
			}
			File serviceListFile = new File(Core.getConfiguration().getResourcesPath() , path);
			InputStream fileStream = FileUtils.openInputStream(serviceListFile);
			fileJsonString = IOUtils.toString(fileStream);
		}
		
		
		String mappingJson = opMappingFile.getJSONModified();
		mappingJson =fileJsonString;
		View viewForRequest = new View(getContext());
		View viewForRespose = new View(getContext());
		JSONObject rootObj = new JSONObject(mappingJson);

		SelectionTreeNode requestNode = new SelectionTreeNode(getContext());
		requestNode.setRoot(true);
		requestNode.setName("Request");
		requestNode.setSelectionTreeNode_View(viewForRequest);
		requestNode.setSelectionTreeNode_Children(TcODataSchemaHelper.getRecursiveTree(getContext(), viewForRequest, rootObj.getJSONObject("OperationInput").toString()));
		requestNode.commit();
		SelectionTreeNode responseNode = new SelectionTreeNode(getContext());
		responseNode.setRoot(true);
		responseNode.setName("Response");
		responseNode.setSelectionTreeNode_View(viewForRespose);
		JSONObject operationResponseJsonObject = rootObj.optJSONObject("OperationResponse");
		String operationResponseString = "";
		if(operationResponseJsonObject != null)
		{
			operationResponseString = operationResponseJsonObject.toString();
			if(operationResponseString.equalsIgnoreCase("{}"))
			{
				operationResponseJsonObject = new JSONObject();
				operationResponseJsonObject.put("output", "void");
				operationResponseString=operationResponseJsonObject.toString();
			}
		}
		else
		{
			operationResponseString = rootObj.optString("OperationResponse");
			operationResponseJsonObject = new JSONObject();
			if(operationResponseString.compareToIgnoreCase("IServiceData")!=0)
			{
				operationResponseJsonObject.put("output", operationResponseString);
			}
			operationResponseString=operationResponseJsonObject.toString();
		}
		responseNode.setSelectionTreeNode_Children(TcODataSchemaHelper.getRecursiveTree(getContext(), viewForRespose, operationResponseString));
		responseNode.commit();
		viewForRequest.commit();
		viewForRespose.commit();
		opMappingFile.setOperationMappingFile_View_Request(viewForRequest);
		opMappingFile.setOperationMappingFile_View_Response(viewForRespose);
		opMappingFile.commit();
		odataAction.commit();
		FeedbackHelper.addRefreshClass(getContext(), OdataActions.getType());
		return null;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "ShowActionMappingEditPageAction";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
