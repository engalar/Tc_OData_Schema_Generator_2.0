// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package schemagenerator.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class SubTypeLinkDisplayName extends CustomJavaAction<java.lang.Boolean>
{
	private java.util.List<IMendixObject> __SubTypes;
	private java.util.List<schemagenerator.proxies.SubTypeEntity> SubTypes;
	private java.util.List<IMendixObject> __SubTypeDisplayNames;
	private java.util.List<schemagenerator.proxies.SubTypeEntityDisplayName> SubTypeDisplayNames;

	public SubTypeLinkDisplayName(IContext context, java.util.List<IMendixObject> SubTypes, java.util.List<IMendixObject> SubTypeDisplayNames)
	{
		super(context);
		this.__SubTypes = SubTypes;
		this.__SubTypeDisplayNames = SubTypeDisplayNames;
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		this.SubTypes = java.util.Optional.ofNullable(this.__SubTypes)
			.orElse(java.util.Collections.emptyList())
			.stream()
			.map(__SubTypesElement -> schemagenerator.proxies.SubTypeEntity.initialize(getContext(), __SubTypesElement))
			.collect(java.util.stream.Collectors.toList());

		this.SubTypeDisplayNames = java.util.Optional.ofNullable(this.__SubTypeDisplayNames)
			.orElse(java.util.Collections.emptyList())
			.stream()
			.map(__SubTypeDisplayNamesElement -> schemagenerator.proxies.SubTypeEntityDisplayName.initialize(getContext(), __SubTypeDisplayNamesElement))
			.collect(java.util.stream.Collectors.toList());

		// BEGIN USER CODE

		if (__SubTypes == null || __SubTypeDisplayNames == null) {
			throw new com.mendix.systemwideinterfaces.MendixRuntimeException("Input Parameters should not be null or empty");
		}
		int minSize = 0;
		if (SubTypeDisplayNames.size() >= SubTypes.size()) 
		{
			minSize = SubTypeDisplayNames.size();
		}
		else
		{
			minSize = SubTypes.size();
		}

		for (int i = 0; i < minSize; i++) {
			SubTypes.get(i).setSubTypeEntity_SubTypeEntityDisplayName(getContext(), SubTypeDisplayNames.get(i));
		}

		return true;

		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "SubTypeLinkDisplayName";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
