// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package schemagenerator.actions;

import java.util.List;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.webui.FeedbackHelper;
import com.mendix.systemwideinterfaces.core.IFeedback;
import schemagenerator.proxies.ContractNameSpaces;
import schemagenerator.proxies.ODataSchema;
import schemagenerator.proxies.OdataActions;
import schemagenerator.proxies.OdataObject;
import schemagenerator.proxies.OperationMappingFile;
import schemagenerator.proxies.SelectionTreeNode;
import schemagenerator.proxies.SelectionTreeNodeHelper;
import schemagenerator.proxies.View;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class MapNodeForActionReturnType__ extends CustomJavaAction<java.lang.Void>
{
	private IMendixObject __odataAction;
	private schemagenerator.proxies.OdataActions odataAction;
	private IMendixObject __returnType;
	private schemagenerator.proxies.ReturnType returnType;

	public MapNodeForActionReturnType__(IContext context, IMendixObject odataAction, IMendixObject returnType)
	{
		super(context);
		this.__odataAction = odataAction;
		this.__returnType = returnType;
	}

	@java.lang.Override
	public java.lang.Void executeAction() throws Exception
	{
		this.odataAction = this.__odataAction == null ? null : schemagenerator.proxies.OdataActions.initialize(getContext(), __odataAction);

		this.returnType = this.__returnType == null ? null : schemagenerator.proxies.ReturnType.initialize(getContext(), __returnType);

		// BEGIN USER CODE
		// IMendixObject orignalView = Core.retrieveByPath(getContext(), __selectionHelper, SelectionTreeNodeHelper.MemberNames.SelectionTreeNodeHelper_View.toString()).get(0);
		// IMendixObject opMappingFile = Core.retrieveByPath(getContext(), orignalView, OperationMappingFile.MemberNames.OperationMappingFile_View_Request.toString()).get(0);
		// IMendixObject action = Core.retrieveByPath(getContext(), opMappingFile, OperationMappingFile.MemberNames.OperationMappingFile_OdataActions.toString()).get(0);
		// List<IMendixObject> cnsList = Core.retrieveByPath(getContext(), action, OdataActions.MemberNames.OdataActions_ContractNameSpaces.toString());
		
		ContractNameSpaces cns = null;
		cns = odataAction.getOdataActions_ContractNameSpaces();
		if (cns == null) {
			OdataObject odataObject = odataAction.getOdataActions_OdataObject();
			cns = odataObject.getOdataObject_ContractNameSpaces();
		}
		ODataSchema schema = cns.getContractNameSpaces_ODataSchema();
		View view = new View(getContext());
		Core.commit(getContext(), TcODataSchemaHelper.getObjectSelectionTreeForSchemaGenreation(getContext(), schema.getMendixObject(), false, true, false, null, view));
		
		// IMendixObject node = Core.retrieveByPath(getContext(), __selectionHelper, SelectionTreeNodeHelper.MemberNames.SelectionTreeNodeHelper_SelectionTreeNode.toString()).get(0);
		// String name = node.<String>getValue(getContext(), SelectionTreeNode.MemberNames.Name.toString());
		// String[] nameParts = name.split("[:]");
		// if (nameParts.length >= 2) {
		// 	if (!nameParts[1].trim().equals("IModelObject")) {
		// 		FeedbackHelper.addTextMessageFeedback(
		// 			getContext(),
		// 			IFeedback.MessageType.INFO,
		// 			"No Need to add Type to Primitives, they can be directly added as Parameters",
		// 			true
		// 		);
		// 		return null;
		// 	}
		// }
		// else {
		// 	FeedbackHelper.addTextMessageFeedback(
		// 		getContext(),
		// 		IFeedback.MessageType.INFO,
		// 		"You can not select the type for structures, Map the members of the structure and then directly add the structure as a parameter.",
		// 		true
		// 	);
		// 	return null;
		// }

		view.setViewForObjectUUID(returnType.getMendixObject().getId().toLong());
		view.commit();
		FeedbackHelper.addOpenFormFeedback(
			getContext(),
			"SchemaGenerator/ActionMappingEditNode",
			IFeedback.FormTarget.MODAL,
			view.getMendixObject().getId(),
			null
		);
		return null;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "MapNodeForActionReturnType__";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
