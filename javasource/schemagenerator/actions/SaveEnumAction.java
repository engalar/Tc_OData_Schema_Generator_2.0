// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package schemagenerator.actions;

import java.util.List;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.webui.FeedbackHelper;
import schemagenerator.proxies.ContractNameSpaces;
import schemagenerator.proxies.OdataEnum;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.systemwideinterfaces.core.UserException;
import com.mendix.systemwideinterfaces.core.UserException.ExceptionCategory;

public class SaveEnumAction extends CustomJavaAction<java.lang.Void>
{
	private IMendixObject __odataEnum;
	private schemagenerator.proxies.OdataEnum odataEnum;

	public SaveEnumAction(IContext context, IMendixObject odataEnum)
	{
		super(context);
		this.__odataEnum = odataEnum;
	}

	@java.lang.Override
	public java.lang.Void executeAction() throws Exception
	{
		this.odataEnum = this.__odataEnum == null ? null : schemagenerator.proxies.OdataEnum.initialize(getContext(), __odataEnum);

		// BEGIN USER CODE
		String name = odataEnum.getName();
		if (name == null || name.isEmpty()) {
			throw new UserException(ExceptionCategory.Custom, "Name Must Not Be Empty");
		}
		name = name.trim();
		NamingRules namingRules = new NamingRules(getContext(), name);
		namingRules.executeAction();
		IMendixObject cnsMxObj =  Core.retrieveByPath(
			getContext(),
			__odataEnum,
			OdataEnum.MemberNames.OdataEnum_ContractNameSpaces.toString()
		).get(0);
		List<IMendixObject> allEnums = Core.retrieveByPath(
			getContext(),
			cnsMxObj,
			OdataEnum.MemberNames.OdataEnum_ContractNameSpaces.toString()
		);
		String contractName = cnsMxObj.getValue(
			getContext(),
			ContractNameSpaces.MemberNames.ContractNameSpace.toString()
		).toString();
		name = contractName + "." + name;
		for (IMendixObject enumMxObj : allEnums) {
			if (enumMxObj.getValue(getContext(), OdataEnum.MemberNames.Name.toString()).toString().equals(name)) {
				throw new UserException(ExceptionCategory.Custom, "Name Already In Use");
			}
		}

		odataEnum.setName(getContext(), name);
		odataEnum.commit();
		FeedbackHelper.addCloseCallerFeedback(getContext());
		FeedbackHelper.addRefreshClass(getContext(), OdataEnum.getType());
		return null;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "SaveEnumAction";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
