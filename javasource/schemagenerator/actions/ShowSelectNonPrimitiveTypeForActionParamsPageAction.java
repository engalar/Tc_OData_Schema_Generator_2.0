// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package schemagenerator.actions;

import java.util.List;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IFeedback;
import com.mendix.webui.CustomJavaAction;
import com.mendix.webui.FeedbackHelper;
import schemagenerator.proxies.ActionParams;
import schemagenerator.proxies.ComplexTypeAttribute;
import schemagenerator.proxies.ContractNameSpaces;
import schemagenerator.proxies.OdataActions;
import schemagenerator.proxies.OdataComplexType;
import schemagenerator.proxies.OdataObject;
import schemagenerator.proxies.View;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class ShowSelectNonPrimitiveTypeForActionParamsPageAction extends CustomJavaAction<java.lang.Void>
{
	private IMendixObject __actionParams;
	private schemagenerator.proxies.ActionParams actionParams;

	public ShowSelectNonPrimitiveTypeForActionParamsPageAction(IContext context, IMendixObject actionParams)
	{
		super(context);
		this.__actionParams = actionParams;
	}

	@java.lang.Override
	public java.lang.Void executeAction() throws Exception
	{
		this.actionParams = this.__actionParams == null ? null : schemagenerator.proxies.ActionParams.initialize(getContext(), __actionParams);

		// BEGIN USER CODE
		IMendixObject odataAction = Core.retrieveByPath(getContext(), __actionParams, ActionParams.MemberNames.ActionParams_OdataActions.toString()).get(0);
		List<IMendixObject> cnsList = Core.retrieveByPath(getContext(), odataAction, OdataActions.MemberNames.OdataActions_ContractNameSpaces.toString());
		IMendixObject cns = null;
		if (cnsList.isEmpty()) {
			IMendixObject odataObject = Core.retrieveByPath(getContext(), odataAction, OdataActions.MemberNames.OdataActions_OdataObject.toString()).get(0);
			cns = Core.retrieveByPath(getContext(), odataObject, OdataObject.MemberNames.OdataObject_ContractNameSpaces.toString()).get(0);
		}
		else {
			cns = cnsList.get(0);
		}
		IMendixObject schema = Core.retrieveByPath(getContext(), cns, ContractNameSpaces.MemberNames.ContractNameSpaces_ODataSchema.toString()).get(0);
		View view = new View(getContext());
		Core.commit(getContext(), TcODataSchemaHelper.getObjectSelectionTreeForSchemaGenreation(getContext(), schema, true, true, true, __actionParams.getId(), view));
		view.setViewForObjectType(getContext(), actionParams.entityName);
		actionParams.setActionParams_View(getContext(), view);
		view.commit(getContext());
		FeedbackHelper.addOpenFormFeedback(
			getContext(),
			"SchemaGenerator/SelectNonPrimitiveTypeForActionParams",
			IFeedback.FormTarget.MODAL,
			view.getMendixObject().getId(),
			null
		);
		return null;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "ShowSelectNonPrimitiveTypeForActionParamsPageAction";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
